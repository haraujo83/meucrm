# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- develop

pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'pipelines-javascript-docker'
  phpVersion: 7.4

steps:
- task: DownloadSecureFile@1
  name: caCertificate
  displayName: 'Download CA certificate'
  inputs:
    secureFile: 'SecurityAPI.pem'
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: |
      3.89.151.136 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBqGGSu6wCOOvBxY8E2hjqapqkf2tWxO2QoROVIQH6J1
      3.89.151.136 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaIuF+IX0ybPswzpHGGDqvymCykgZ7MCgH3u9FTdBCJ0Bd3uSmo/jXx8Z2JZN2ztsklhxq/LPNPcAOgRvRlB5vyIURCCbstRTTQhKyGF4kciCtKcdlZhOOViUtMJfvttDt+JrV7qgTpcGnWlWcswALMLW3yT/9fiTg9YHpF861X5LtLYUIDCLFqQ4pHcKFYesPv5VfU7sUyL/44YjyqhBhOrwzHGOJeXKKq/eOENFu1jWQXP9q8O4mu/fMtNQNWfsFBhb835g6dWDoQc8O6Rha5HTRpfVWtvin3yHxxIcHLFM7SxTzxox2rhiFtqiq03TYxvCBwJ3hMLEseckmfkaV
      3.89.151.136 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAr3OrBVoFPyYx4pRgJAGkSijT0gImqzGOa1zRCt0RGohtW1h6YnMgby05fNN3Ke77zQZTyMzT8A9bPgzEAzH3o=
      34.235.156.171 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOB+VS0sZiEIH32ef/A6ud5JU41GwjYC6SXuyw7sB2uMwonpEqLhBEcLbPDfHWy6HSsdeELqlLfZRORsZL6fnVo=
    sshKeySecureFile: 'SecurityAPI.pem'

- script: |
    echo Installing $(caCertificate.secureFilePath) to the trusted CA directory...
    sudo chown root:root $(caCertificate.secureFilePath)
    sudo chmod a+r $(caCertificate.secureFilePath)
    sudo ln -s -t /etc/ssl/certs/ $(caCertificate.secureFilePath)
- script:
    sudo ls
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

#- script: composer install --no-interaction --prefer-dist
  #displayName: 'composer install'

#- script: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #displayName: 'copy .env'

#- script: php artisan key:generate --ansi
  #displayName: 'artisan key:generate'

#- script: ./vendor/bin/phpunit
  #displayName: 'Run tests with phpunit'

#- script: php artisan route:list
  #displayName: 'route:list'

#- script: npm install
  #displayName: 'npm install'

#- script: npx mix
  #displayName: 'npx mix'

#- task: ArchiveFiles@2
  #inputs:
    #rootFolderOrFile: '$(system.defaultWorkingDirectory)'
    #includeRootFolder: false
